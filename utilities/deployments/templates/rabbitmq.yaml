---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: {{ .Release.Namespace }}
  labels:
    app: rabbitmq
    egressTraffic: green
spec:
  replicas: {{ index .Values.replica.rabbitmq .Values.env }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge:  40%
       maxUnavailable: 20%
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: {{ .Values.image.rabbitmq }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - name: vol-cm-rabbitmq
          mountPath: /etc/rabbitmq/definitions.json
          subPath: definitions.json
        - name: vol-cm-rabbitmq
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: vol-logs-rabbitmq
          mountPath: {{ .Values.logs }}/rabbitmq
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: {{ .Values.RABBITMQ_USER }}
        - name: RABBITMQ_DEFAULT_PASS
          value: {{ .Values.RABBITMQ_USER }}
        - name: DEFAULT_TIME_ZONE
          value: "{{ .Values.timezone }}"
        - name: TZ
          value: "{{ .Values.timezone }}"
      volumes:
      - name: vol-cm-rabbitmq
        configMap:
          name: cm-rabbitmq-main
      - name: vol-logs-rabbitmq
        persistentVolumeClaim:
          claimName: logs-rabbitmq-{{ .Release.Namespace }}
      imagePullSecrets:
      - name: {{ .Values.secret }}
