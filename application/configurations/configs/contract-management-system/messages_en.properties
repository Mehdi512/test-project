
ruleFieldsAssociationRequest.ruleId.message=ruleId
ruleFieldsAssociationRequest.createdBy.message=createdBy
productVariantRuleAssociationRequest.ruleId.message=ruleId
productVariantRuleAssociationRequest.createdBy.message=createdBy
productVariantRuleAssociationRequest.validFrom.message=validFrom
productVariantRuleAssociationRequest.validUntil.message=validUntil
concertedRuleInfoRequest.ruleName.message=ruleName
concertedRuleInfoRequest.createdBy.message=createdBy
concertedRuleInfoRequest.validUntil.message=validUntil
concertedRuleInfoRequest.validFrom.message=validFrom
calculatePriceMultiProductRequest.referenceNumber.message=referenceNumber
calculatePriceMultiProductRequest.profileId.message=profileId
requestedProduct.productSku.message=productSku
requestedProduct.itemCount.message=itemCount
requestedProduct.amount.message=amount
requestedProduct.sender.message=sender
requestedProduct.senderWallet.message=senderWallet
requestedProduct.receiver.message=receiver
requestedProduct.receiverWallet.message=receiverWallet
requestedProduct.applicableContract.message=applicableContract
requestedProduct.offerPrice.message=offerPrice
requestedProduct.senderAccountId.message=senderAccountId
requestedProduct.receiverAccountId.message=receiverAccountId
contractPriceEntryPayLoadRequestV2.type.message=type
contractPriceEntryPayLoadRequestV2.entryKey.message=entryKey
contractPriceEntryPayLoadRequestV2.contractId.message=contractId
contractPriceEntryPayLoadRequestV2.currencyId.message=currencyId
contractPriceEntryPayLoadRequestV2.productId.message=productId
contractPriceEntryPayLoadRequestV2.createdBy.message=createdBy
contractPriceEntryPayLoadRequestV2.comment.message=comment
contractPriceEntryPayLoadRequestV2.status.message=status
contractPriceEntryPayLoadRequestV2.validFrom.message=validFrom
priceEntryRangePayloadRequestV2.fromAmount.message=fromAmount
marginRulesPayLoadRequestV2.groupId.message=groupId
contractPayLoadRequestV2.clonedContractKey.message=clonedContractKey
contractPayLoadRequestV2.clonedFrom.message=clonedFrom
contractPayLoadRequestV2.contractStatus.message=contractStatus
contractPayLoadRequestV2.createdBy.message=createdBy
contractPayLoadRequestV2.modifiedBy.message=modifiedBy
contractPayLoadRequestV2.createdAt.message=createdAt
resellerData.resellerPath.message=resellerPath
resellerData.resellerTypeId.message=resellerTypeId
resellerData.resellerTypeName.message=resellerTypeName
resellerData.resellerId.message=resellerId
resellerData.resellerMSISDN.message=resellerMSISDN
resellerData.parentResellerId.message=parentResellerId
resellerData.parentResellerName.message=parentResellerName
resellerData.resellerName.message=resellerName
resellerData.resellerJuridicalName.message=resellerJuridicalName
resellerData.distributorId.message=distributorId
resellerData.contractId.message=contractId
resellerData.taxGroupId.message=taxGroupId
resellerData.clusterId.message=clusterId
resellerData.oldClusterId.message=oldClusterId
resellerData.clusterCycleId.message=clusterCycleId
resellerData.chainStoreId.message=chainStoreId
resellerData.terminalId.message=terminalId
resellerData.terminalAddress.message=terminalAddress
principalData.principalKey.message=principalKey
principalData.language.message=language
principalData.timezone.message=timezone
principalData.countryCode.message=countryCode
resellerData.initiatorId.message=initiatorId
address.street.message=street
address.zip.message=zip
address.city.message=city
address.country.message=country
address.phone.message=phone
address.fax.message=fax
address.homepage.message=homepage
address.email.message=email
principalId.type.message=type
principalId.id.message=id
accountData.owner.message=owner
accountData.accountDescription.message=accountDescription
accountData.languageCode.message=languageCode
accountData.currency.message=currency
accountData.accountLinkTypeId.message=accountLinkTypeId
accountData.accountClassId.message=accountClassId
accountData.accountBaseClassId.message=accountBaseClassId
accountData.password.message=password
accountData.description.message=description
amount.value.message=value
amount.currency.message=currency
periodicCreditLimit.transactionCount.message=transactionCount
account.accountId.message=accountId
account.accountTypeId.message=accountTypeId
account.accountProviderId.message=accountProviderId
account.accountDescription.message=accountDescription
contractDataMap.message=contractDataMap
ftlGrammar.message=ftlGrammar
fields.message=fields
fieldsMap.message=fieldsMap
variantIdAndSKUMap.message=variantIdAndSKUMap
transactionParams.message=transactionParams
filter.message=filter

calculate.range.response.invalid.quantity=Incorrect item quantity in cart. Allowed range for {0} is {1}
calculate.range.response.invalid.range=Incorrect item range in cart. Allowed range for {0} is {1}


ContractResourceV2.getContracts.message=Successfully Fetched Contracts
ContractResourceV2.noContracts.message=No Matching Records Found
ContractResourceV2.contractById.message=Successfully fetched products For contract id: {0}
ContractResourceV2.noContractById.message=No Matching Records Found For contract id: {0}
ContractResourceV2.productsByIDs.message=Successfully fetched products For contract id: {0} and product sku: {1}
ContractResourceV2.noProductsByIDs.message=No Matching Records Found For contract id: {0} and productSku: {1}
ContractResourceV2.contractByResellerType.message=Successfully fetched reseller type contract details, pageNo: {0} and pageSize: {1}
ContractResourceV2.noContractByResellerType.message=No Matching Records Found For reseller type contract details, pageNo: {0} and pageSize: {1}


CalculateMultiProductPricingApi.failureOfPricing.message=FAILED to calculate pricing!
CalculateMultiProductPricingApi.productInvalid.message=Product is not available or invalid status!
CalculateMultiProductPricingApi.incorrectProductAmount.message=Incorrect product`s amount is passed
CalculateMultiProductPricingApi.invalidSenderContract.message=Invalid sender or sender`s contract is not found!
CalculateMultiProductPricingApi.invalidReceiverContract.message=Invalid receiver or receiver`s contract is not found!
CalculateMultiProductPricingApi.contractNotActive.message=Contract {0} is not active
CalculateMultiProductPricingApi.inactiveProductPricingEntry.message=Pricing Entry of Product {0} is inactive.
CalculateMultiProductPricingApi.topUpProductUnavailable.message=Original Topup Product {0} is either block or unavailable!
CalculateMultiProductPricingApi.pricingSuccessful.message=Pricing calculation done successfully.
CalculateMultiProductPricingApi.pricingFailure.message=FAILED to calculate pricing! Reason : {0}


ConcertedRuleInfoServiceApi.failedToSave.message=FAILED to save data!
ConcertedRuleInfoServiceApi.duplicateRule.message=Duplicate rule found with rule {0}
ConcertedRuleInfoServiceApi.ruleNotExist.message=Rule doesn`t exist
ConcertedRuleInfoServiceApi.productPricingOverLappedInvalid.message=Selected Product SKUs either holding Overlapped price or invalid product sku pattern !
ConcertedRuleInfoServiceApi.updateSuccessful.message=Data updated successfully !
ConcertedRuleInfoServiceApi.deleteSuccessful.message=Concerted rule deleted successfully.
ConcertedRuleInfoServiceApi.deletedFailed.message=Concerted rule deletion failed. Reason: {0}
ConcertedRuleInfoServiceApi.ruleExists.message=Rule with name : {0} already exists!
ConcertedRuleInfoServiceApi.duplicateSKUPattern.message=Selected Product SKUs have duplicate product sku pattern !
ConcertedRuleInfoServiceApi.rulesExistsWithChannels=Rules : {0} already exists for {1}
ConcertedRuleInfoServiceApi.validationSuccessful.message=validation successful
ConcertedRuleInfoServiceApi.saveSuccessful.message=Data saved successfully!
ConcertedRuleInfoServiceApi.fetchSuccessful.message=Data fetch successfully!
ConcertedRuleInfoServiceApi.noDataFound.message=No Data Found for given criteria.
ConcertedRuleInfoServiceApi.dataFound.message=Data Found for given criteria.
ConcertedRuleInfoServiceApi.channelNotFound.message=Transaction field: channel not found in our data store!
ConcertedRuleInfoServiceApi.SKUNotAvailable.message=Product SKUs are not available in our data store, please first configure products!
ConcertedRuleInfoServiceApi.headerMismatch.message=Import file header mismatch with provided in configuration file!
ConcertedRuleInfoServiceApi.exceptionReadingStream.message=Exception while reading stream while validating the import file!
ConcertedRuleInfoServiceApi.rulesImported.message=Rules are imported successfully
ConcertedRuleInfoServiceApi.recordsPersistFailed.message={0} records failed to persist!, please go through details for reasoning
ConcertedRuleInfoServiceApi.saveFailed.message=Unable to save due to error during persistence!
ConcertedRuleInfoServiceApi.productValidationSuccessful.message=Successfully validated Product variant: {0}
ConcertedRuleInfoServiceApi.priceOverLappedWithRule.message=product variant either holding Overlapped price with associated products of {0} rule or invalid product sku pattern !
ConcertedRuleInfoServiceApi.noRuleForSKU.message=Rule not found for incoming productSKU: {0}
ConcertedRuleInfoServiceApi.validatedNoRulesExist.message=Product variant validated, no rule exists for product variant
ConcertedRuleInfoServiceApi.saveFailedRequestParamsInvalid.message=Failed to save data.Reason:: Values sent in request parameters are invalid
ConcertedRuleInfoServiceApi.noVariantWithParams.message=No Product variant rule association found for variant id:{0} variant name:{1} and operation:{2}
ConcertedRuleInfoServiceApi.variantRemovedFromRule.message=Product variant:{0} removed successfully from rule.
ConcertedRuleInfoServiceApi.variantAddedToRule.message=Product variant:{0} added successfully to rule.
ConcertedRuleInfoServiceApi.variantPricingOverLappedInvalid.message=Selected Product variant:{0} either holding Overlapped price or invalid product sku pattern.

CalculatePriceOfProductServiceApi.invalidProduct.message=INVALID_PRODUCT
CalculatePriceOfProductServiceApi.pricingSuccessful.message={0} . Pricing calculation done successfully
CalculatePriceOfProductServiceApi.pricingFailed.message={0}. Failed to calculate the pricing. RejectingRuleId : {1}

ProductVariantRuleAssociationServiceApi.updateFailed.message=FAILED to update data!
ProductVariantRuleAssociationServiceApi.SKUOverlappedOrDuplicate.message=Selected Product SKUs either holding Overlapped price or invalid/duplicate product sku pattern !
ProductVariantRuleAssociationServiceApi.updateSuccessful.message=Data updated successfully !

ResellerProductRangeApi.productFetchFailed.message=FAILED to fetch reseller`s product ranges
ResellerProductRangeApi.productFetchSuccess.message=ResellerProductRange has fetched successfully.

BulkContractPriceEntriesServiceApi.rangeExecutionSuccessful.message=All contract price entry ranges executed successfully
BulkContractPriceEntriesServiceApi.rangeProcessedWithParams.message={0} out of {1} contract price entry ranges are processed in batch request.

ContractPriceEntriesServiceApiV2.fetchSuccessful.message=Successfully fetched contracts price entry
ContractPriceEntriesServiceApiV2.noRecordsForContractProduct.message=No Matching Records found for contract key: {0} and product key: {1}
ContractPriceEntriesServiceApiV2.zeroSumFailed.message=failed zero sum rule
ContractPriceEntriesServiceApiV2.rangeExists.message=Duplicate price range! The range: {0} - {1}  already exists!
ContractPriceEntriesServiceApiV2.overLappedPriceRange.message=Overlapped price range: {0} - {1} with range: {2} - {3}
ContractPriceEntriesServiceApiV2.invalidPriceRange.message=Invalid price range {0} - {1}
ContractPriceEntriesServiceApiV2.rangeExecutionSuccessful.message=All contract price entry ranges executed successfully
ContractPriceEntriesServiceApiV2.rangeBatchProcessed.message={0} out of {1} contract price entry ranges are processed in batch request.

ContractRuleServiceApiV2.invalidExpression.message=Expression is not valid
ContractRuleServiceApiV2.validExpression.message=Expression is valid

KafkaServiceApi.notEnabled.message=Kafka not enabled
KafkaServiceApi.pushSuccessful.message=Message pushed successfully
KafkaServiceApi.errorInKafka.message=Error while sending logs to kafka. Reason: {0}

ResellerProductRangeApiV2.rangeFetchFailed.message=FAILED to fectch reseller`s product ranges
ResellerProductRangeApiV2.rangeFetchSuccessful.message=ResellerProductRange fetched successfully.

ContractServiceV2Impl.resellerTypeContracts.message=Successfully fetched contracts for ResellerTypeKey: {0}
ContractServiceV2Impl.noResellerTypeContracts.message=No Matching Records Found for ResellerTypeKey: {0}

ContractRuleResource.subRegionFetchSuccessful.message=Sub Region fetched successfully.
ContractRuleResource.regionFetchSuccessful.message=Regions fetched successfully.

RuleResource.errorInTokenDecoding.message=Error occurred! SystemToken decoding failed!
RuleResource.fileEmptyOrInvalid.message=Either file is empty Or content type is Invalid!

ProductVariantRuleAssociation.invalidSearchKey.message=Invalid search key
ProductVariantRuleAssociation.reseller.not.found.message=Invalid reseller info
ProductVariantRuleAssociation.field.map.not.found.message=Invalid search criteria

RuleResourceV2.getConcertedRule.message=Successfully fetched concerted rule
RuleResourceV2.noConcertedRule.message=No concerted rule found

Success.message=Success
Failed.message=Failed

ContractServiceApiV2.processBulkContractsUpdate.empty.request=Missing details for updating contracts.
ContractServiceApiV2.rangeBatchProcessed.message={0} out of {1} contracts are processed in batch request.
ContractServiceApiV2.contracts.tags.not.found=No contract tags found in the system
ContractServiceApiV2.contracts.account.types.not.found=No account types found in the system
ContractServiceApiV2.contracts.wallet.types.not.found=No Wallet Types found in the system
ContractServiceApiV2.contracts.value.types.not.found=No value types found in the system
ContractServiceApiV2.contracts.product.key.not.found=Error in resolving product with id {0}
ContractServiceApiV2.pre.requisite.setup.failed=Unable to fetch prerequisite data for processing of batchId {0}
ContractServiceApiV2.existing.contracts.fetch.error=Unable to fetch the existing contract details against batchID {0} and contract ids {1}
ContractServiceApiV2.pricing.list.validate.error=Record number {0} failed validation checks against regions and/or products input/contract not resolved.
ContractServiceApiV2.pricing.list.validate.validfrom.error=failed validation checks for valid from date {0}.
ContractServiceApiV2.contracts.id.not.found=Contract {0} does not exists in the system
ContractServiceApiV2.contracts.new.price.entry.range.added=New Price entry range with fromAmount:{0} and toAmount:{1} added successfully for product {2}, contract {3} and valid from {4}
ContractServiceApiV2.contracts.price.entry.range.updated=Price entry range updated for product {0}, contract {1} and valid from {2}
ContractServiceApiV2.contracts.new.price.entry.range.save.failed=Failed to add new Price entry range for product {0}, contract {1} and valid from {2}
ContractServiceApiV2.contracts.price.entry.range.update.failed=Failed to update Price entry range for product {0}, contract {1} and valid from {2}
ContractServiceApiV2.contracts.new.price.entry.added=New Price entry with fromAmount:{0} and toAmount:{1} added successfully for product {2}, contract {3} and valid from {4}
ContractServiceApiV2.contracts.new.price.entry.save.failed=Failed to add new Price entry for product {0}, contract {1} and valid from {2}
ContractServiceApiV2.contracts.margin.rules.prepare.failed=Error while preparing the default margin rules for product key {0} and contract key {1}
ContractServiceApiV2.contracts.price.entry.not.found=No current contract price entry found for contract key:{0} and product variant:{1}
ContractServiceApiV2.contracts.price.entry.duplicate.found=Price entry range already exists with entry key:{0} for contract key:{1} and product variant:{2} for incoming future date:{3}
ContractServiceApiV2.contracts.product.not.found=Product variant {0} doesn't exists in the system
ContractServiceApiV2.pricing.list.validate.discount_inputs.error=no contracts resolved, expected discount input missing
ContractServiceApiV2.pricing.list.validate.region_inputs.error=no contracts resolved, expected regions input missing
ContractServiceApiV2.pricing.list.validate.region_discount_inputs.error=no contracts resolved, expected discount tags/regions input missing

lock.rule.non-editable-field=Field {0} cannot be edited
lock.rule.field.remove.error=Field {0} cannot be removed
lock.rule.field.add.error=Field {0} cannot be added
lock.rule.field.update.error=Field {0} cannot be updated
lock.rule.edit.validFrom.error=Valid from cannot be updated for an active rule
lock.rule.edit.validUntil.error=Valid until cannot be updated for an active rule
lock.rule.missing.ranges=Inventory range for lock rule cannot be empty or null
lock.rule.invalid.ranges=Inventory range is not valid for lock rule
lock.rule.invalid.validFrom=Lock rule valid from cannot be empty or null
lock.rule.invalid.validUntil=Lock rule valid until cannot be empty or null
lock.rule.invalid.fieldValue=Lock rule {0} field value cannot be empty or null
lock.rule.invalid.createdBy=Lock rule created by cannot be empty or null
lock.rule.invalid.date-range=Lock rule valid until cannot be before valid from
lock.rule.invalid.date-range-format=Lock rule date format is not valid