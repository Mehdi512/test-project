console.log('build: 1420, AppVersion: v0.3.411');
 window.config = {
  language: "en",
  protocol: "http",
  server: location.hostname,
  port: location.port,
  dateFormat: "dd/MM/yyyy", // Valid formats: dd/MM/yyyy, MM/dd/yyyy, "yyyy/MM/dd"
  isSidebarLabelUpperCase: true,
  gpUserResellerType: ["OPERATOR", "BCU"],
  barcodeScanner: true,
  scanningWithWebCam: false,
  httpTimeout: "30000", // in millis
  timeoutMessage: "UI Timeout",
  searchCallTimeout: "2000", // in millis
  snackbarAutoHideDuration: 30000, // in millis
  SearchCallValue:2,
  captchaRefreshTime: "15000", // in millis
  isAllowedTokenRefresh: false,
  service: "",
  locale: "/locales/{{lng}}/{{ns}}.json",
  currency: "BDT",
  openCalendarWith: "date",
  customer: "GP-Grameenphone",
  helplineNumber: "0012 345 678",
  contactValues:["viaSms","viaEmail","customerSupport"],
  additionalContactInformation:false,
  defaultTemplate: "",
  defaultPerPageItems: 20,
  timeZone: "UTC",
  hiddenModules: [], //"reseller", "account", "group" To disable specific modules
  channel: "web",
  captchaRegex: "^(?=.*\\d)(?=.*[A-Z])[0-9A-Z]{6}$",
  captchaTextStriked: false,
  extraColumnConfigurations: {}, //Unitel specific: Show extra columns for datatable for=> {resellers: [{ status: "hide"}, {balanceStatus: "show"}, {inventoryStatus:"show" }]}
  isBase64EncodePassword: false,
  productCategoryDropdownLimit: 25,
  newLandingDesign: true,
  numberOfSliderImages: 3,
  hideOptionsFromTable: ["export"],
  unAuthConfig:{
    unauthorizedMessage: "Unauthorized Access",
    logoutOnUnAuth: true
  },
  otpFieldLength : 6,
  resendOTPTimeInMilliSeconds : 150000, // Value in milliseconds
  loginOptions: {
    loginWithPassword: false,
    loginWithPasswordOTP: false,
    loginWithOTP: false,
    loginWithPasswordCaptcha: false,
    loginWith2FA: false,
    userTypeBasedAuthentication: true,
    loginWithMSISDN: false,
    loginWithBackendBased2FA: true,
  },
  forgotOptions: {
      userId: true,
      resellerMSISDN: true,
      resellerId: true,
  },
  modules: [
    "inventory",
    "kyc",
    "order",
   // "admin",
    "reseller",
   // "voucher",
    "product",
    "group",
    "report",
   // "account",
   // "survey",
    "contract",
   // "trip",
   // "commission",
   // "activity",
    "bulk",
    "settings",
   // "crm",
    "region",
    "route",
   // "transaction",
   // "logistics",
   "thresholds",
    "livemap",
    "notification",
    "tertiary",
   // "wallet",
   // "dashboard",
   // "actor",
   // "campaign",
   // "workflows",
   // "customerCare",
  ],
  registrationRestrictedStatus: ["active"], // A case sensitive & all possible statuses should be ["active", "frozen", "blocked"]
  activity: {
    adminType: [],
    createActivityRTP: "DLR-0"
  },
   actorConfig: {
      "Retailer": ["Retailer", "RSO", "Super_Franchise"], "TP Staff": ["Regional_Director", "Circle_VP", "Zonal_Manager", "Belt_Manager", "Ash"],
      "Adhoc_User": ["Adhoc_User"],
      slugs: {
        adhocUser: "Adhoc_User",
        retailer: "Retailer",
        tpStaff: "TP Staff"
      },
      defaultPasswordPolicyKey: 1,
      defaultGroupUntilDateInNumberOfYears: 50
    },
  bulk: {
    schedulerTypes: [
      { key: "Scheduled At", value: "scheduledAt" },
      { key: "Immediate", value: "immediate" },
      { key: "Scheduled", value: "scheduled" },
      { key: "Approval Pending", value: "approval-pending" },
      { key: "Rejected", value: "rejected" }
    ],
    exportSample: true,
    bulkImportFileExtension: ["csv"],
    failOnError: true,
    importSubTypeOptions: {
      Inventory: { type: "inventory", hasQueryParam: true, schedulerType:"immediate",failOnError: true },
      Reseller: { type: "reseller", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      Reselleruser: { type: "resellerUser", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      Order: { type: "order", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      RateCard: { type: "rateCard", hasQueryParam: false, schedulerType:"immediate",failOnError: false },
      ReverseOrder: { type: "reverseorder", hasQueryParam: false, schedulerType:"immediate",failOnError: false },
      Transaction: { type: "transaction", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      campaignTargets: { type: "campaignTargets", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      Product: { type: "product", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      Contract: { type: "contract", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      AssetMetaData: { type: "addAssetMetaData", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      Demarcation: { type: "demarcation", hasQueryParam: true, schedulerType:"immediate",failOnError: false },
      UpdateResellerParam: { type: "updateResellerParam", hasQueryParam: true, schedulerType:"immediate",failOnError: false },

    },
  },
  campaign: {
    status: [
      { key: "Created", value: "1" },
      { key: "Active", value: "2" },
      { key: "Hold", value: "3" },
      { key: "Approved", value: "4" },
      { key: "Disapproved", value: "5" },
      { key: "Closed", value: "6" },
      { key: "Unpaid", value: "7" },
      { key: "Partially Paid", value: "8" },
      { key: "Approval Pending", value: "9" },
      { key: "Drafted", value: "10" },
      { key: "Approval Pending For Data Madification", value: "11" },
      { key: "Activation Failed ", value: "12" },
      { key: "Awaiting Activation", value: "13" },
      { key: "Activation Registration Failed", value: "14" },
      { key: "Drafted For File Upload", value: "15" },
      { key: "Hold Awaiting", value: "16" },
      { key: "Resume Awaiting", value: "17" },
      { key: "Auto Rejected", value: "18" },
    ],
    statusValue: ["DRAFTED", "CREATED", "DISAPPROVED", "REGISTERED", "REGISTRATION_FAILED","AWAITING_ACTIVATION"],
    additionalRetailer: "Additional Retailers",
    showTargetAudience: false,
    showTaxFields: false,
    commissionPayout: {
      hideColumns: ["gstAmount", "gstWHAmount", "incomeTaxWHAmount"],
    },
    campaignView: {
      hideColumns: ["gstAmount", "gstWhAmount", "taxAmount"],
    },
  },
  commission:{
    walletType: "RESELLER",
    commissionStatus: ["UNAPPROVED", "ACTIVE", "PENDING_FOR_REVIEW"],
    operatorList:[
      { key: "equals", value: "equals" },
      { key: "not equals to", value: "Not equals to" },
      { key: "greater than", value: "Greater than" },
      { key: "less than", value: "Less than" },
      { key: "greater than equals to", value: "Greater than equals to" },
      { key: "less than equals to", value: "Less than equals to" },
    ]
  },
  crm: {
    fieldName: 'dealerId'
  },
  customerCare: {
    languageOptions:[
    { key: "English", value: "en" },
    { key: "Bengali", value: "bn" },
    ],
  },
  dashboard: {
    resellerTypes: ['branch', 'pos', 'hq_mpesa'],
    orderDashboardFilterResellerTypes: ['branch', 'pos', 'hq_mpesa','director'],
    regionDataVals: ['ALL', 'Coast', 'RIFT', 'Great Western', 'Nairobi East'],
    monthData: [{ key: 'ALL', value: 'ALL' }],
    optionSelectLimit: 6,
    asA: ["Seller", "DROP_LOCATION"],
    agentType: ["DSA", "TDR", "3PL"],
    resellertypesRegional: ["hq", "branch", "hq_mpesa", "pos"],
    isStandardProduct : false,
  },
  group: {
    domainMaximumMembers: 10,
    showAdminTableInView: false,
    hideKeyOnGroupUpdate: [],
    keyboardDateFormat: "dd/MM/yyyy HH:mm",
    dateFormate: "DD/MM/YYYY HH:mm",
    showMsisdn:false,
    domainsStatusDropdown: ["active", "blocked"],
    domainCodeRegex: "^[A-Z0-9]{4}$",
    updateDomainDisabledFields: ["name", "description"],
    domainsColumnSort:["actions","name","description","status"],
    groupMembersColumnSort:[
      "actions",
      "id",
      "userId",
      "userName",
    ],
    domainsGroupType: "RESELLER_CHANNEL",
  },
  inventory: {
    colors: ['#FFF44C', '#E91E63', '#9C27B0', '#7CDDDD', '#FF7300', '#003F5C'],
    optionSelectLimit: 6, // Max should be 8 else donut chart UI will not look good
    callV2BoxesListingAPI: true, // If set to false then v1 api will get called
    fetchChildStockForBoxes: true,
    defaultProductTypes: ["serialised", "non-serialised", "trackable-non-serialised"], // default product types for inventory dashboard table
    defaultProductTypeFilter: [{key: "productType", operation: "equals",value: "serialised,non-serialised,trackable-non-serialised"}],
    lostAndFoundRequestRaiser: "DIST",
    lostAndFoundDisableEndSerialValue: "SERIAL",
    lostAndFoundSimKitHeadIds: [6, 7],
    lostAndFoundSimKitSerialCharacterExempt: 2,
    lostAndFoundColumnSort: ["actions", "transactionId", "requestedStatus", "initiatedBy", "gdrFirFileUrl", "gdTimeStamp", "createdTimeStamp"],
    lostAndFoundInputTypeOptions: [
      { key: "Range", value: "RANGE" },
      { key: "Single", value: "SERIAL" },
    ],
    hideDashboardSearchFields: [ "salesArea", "region" ],
  },
  livemap: {
    apiKey: 'AIzaSyC50SsFI2dFtN6Bygpt2YG4yOFgYQkp7X4',
    agentTypes: ['Agent', 'agent'],
    center: { lat: 22.5565568, lng: 87.895755 },
    zoom: 10,
    resellerTypes: ["Mentor", "Agent"],
  },
  order: {
    paymentBasedOrders: ["IPO"], // this config is for order that depends upon payment types
    orderFlowMapping: {
      IPO: "IPO_PB"
    },
    newOrderDetailsScreenForPOOrders: true,
    grnProductTableColumnsSort: ['actions', 'productName', 'productType', 'startSerial', 'endSerial', 'startMSISDN', 'endMSISDN', 'grnQuantity', 'receivedQuantity'],
    grn: {
      productHeadFilterBasedOnProductHead: {},
      convertibleProductTypes: ["hybrid"],
      resellerTypesForSerialisedTreatmentOfConvertibleProducts: ["GPC"],
      simProducts: ["1000697"],
      serialConfigBasedOnProductHead: [
        {
          productHead: "SIM KIT",
          regex: "^\\d{26}[A-Za-z0-9]{2}$",
          noOfCharToRemoveFromLast: 2,
          errorMessage: "patternNotMatching",
        },
        { productHead: "", regex: "", noOfCharToRemoveFromLast: 2  },
        { productHead: "", regex: "", noOfCharToRemoveFromLast: 2 },
      ],
      hideOptionsFromTable: ["filter", "columns", "density", "export"],
    },
    payments: {
      columnsSort: ['actions', 'paymentMode', 'totalPoAmount', 'remainingAmount', 'amountPaying', 'instrumentType', 'gpBankAccountName', 'instrumentBankName', 'instrumentBankDistrict', 'instrumentBankBranch', 'depositedGpBankAccountNo', 'bankDepositDate', 'referenceNo', 'attachment'],
      resourceType: "attachments",
      paymentPendingState: "INITIATED/PENDING_CONFIRMATION/PENDING",
      hideOptionsFromPaymentListTable: ["columns", "filter", "density", "export"],
    },
    enableTemplateBasedOrderFlow: false,
    hideToolbarOptionsForStockAllocationTable: ["columns", "filter", "density", "export"],
    hideOptionsFromPOTable: ["columns", "density", "filter", "export"],
    hideOptionsFromMOTable: ["columns", "density", "filter", "export"],
    cancelStates: ["Initiated","Order Rejected"],
    cashPOColumnsSort: ["actions",  "productItem", "controlMultiplier", "suggestivePOValue", "allocatedQuantity", "liftedQuantity", "remainingQuantity", "availableStockInHand", "unitPrice", "requestedQuantity", "totalPrice"], // order for table columns below add product button in PO
    moColumnsSort: ["actions",  "productItem", "controlMultiplier", "suggestiveMOValue", "allocatedQuantity", "liftedQuantity", "remainingQuantity", "availableStockInHand", "unitPrice", "requestedQuantity", "totalPrice"], // order for table columns below add product button in MO
    removedFieldsFromTable: ["price", "discount", "tax", "total", "paymentInfo"],
    orderFlowWithDefaultValue: false, // If true will set default values automatically.
    callOrderPaymentTypesAPI: true,
    orderListingBasedOnCondition: false, // Listing based on payment types API response (Order Category)
    callIsBasicResellerInfoAPIInOrders: true,
    advancedSearchViaBIEngine: false,
    standardProductFlow: true, // Standard product design and concepts will be enabled if config value is set as true
    raiseOrderApplicationJson: true, // If OMS build no. is 354 or above then keep it true, else false
    mPesaCountdownTimer: 30, // In seconds and must be greater than 2
    employeeSnicCategory: "Employee",
    settleInvoiceDealerType: "hq",
    pisoOrderRouteInfoAdditionalField: "routeInfo",
    resourceType: "attachments",
    fileSize: 2000000,
    supportedFormats: [
      "image/jpg",
      "image/jpeg",
      "image/png",
      "application/pdf",
    ],
    orderColumnSort: [
      "actions",
      "createTimestamp",
      "state",
      "paymentMode",
      "paymentAgreement",
      "orderId",
      "orderType",
      "senderId",
      "receiverId",
      "buyerId",
      "sellerId",
      "externalReference",
      "resultMessage",
    ],
    topup: {
      enabled: true,
      orderTypes: ["ISO", "ISO_ST", "IPO_D", "ISO_DST"],
    },
    serviceInfo: {
      enabled: true,
      serialisedTypes: ["PISO", "SO_ST", "ISO_ST", "ISO", "IPO", "IPO_ST", "ISRO_ST", "SO", "PO", "IPRO_ST"],
      nonSerialisedTypes: ["PISO", "SO_ST", "ISO_ST", "ISO", "IPO", "IPO_ST", "ISRO_ST", "SO", "PO", "IPRO_ST"],
      trackableNonSerialisedTypes: ["PISO", "SO_ST", "ISO_ST", "ISO", "IPO", "IPO_ST", "ISRO_ST", "SO", "PO", "IPRO_ST"],
      digitalTypes: ["ISO_D", "ISO_DST", "IPO_D"],
    },
    freeSelectInventoryNoProductDropdown: [
      "non-serialised",
      "services-topup",
      "serialised",
      "services-b2b"
    ],
    quantityEnabledOrderType: ["IPO_ST"],
    addtionalInformation: {
      enabled: true,
      fields: [
        {
          orderType: ["ISO_DST"],
          key: "senderPin",
          value: "",
          required: true,
          kind: "text",
          type: "password",
        },
        {
          orderType: ["PO", "IPO_D"],
          key: "POReference",
          value: "",
          required: true,
          kind: "text",
          type: "text",
        },
        {
          orderType: ["PO"],
          key: "LPO",
          value: "",
          required: true,
          kind: "file",
          type: "file",
        },
      ],
    },
    subscriberTypes: [],
    manualAdjustmentOptions: ["RESELLERID", "RESELLERMSISDN"],
    reversalOrderTypes: ["ISO", "ISO_DST", "ISO_D", "PISO"],
    erpBalanceResellerTypesId: ["hq", "hq_mpesa"],
    showERPBalance: true,
    showERPBalancePaymentMode: ["ERP"],
    showERPShowableOrder: ["PO", "IPO_D"],
    deliveryOptions: ["delivery", "collection"],
    orderConfirmationOtp: {
      numberOfDigit: 6,
      timeInMiliSeconds: 120000,
    },
    advancedSearchFields:["buyerId", "sellerId"],
    showProductQuotaV2: true,
    ProductQuotaDropdownLimit: 30,
    productQuotaColumnSort: ["actions", "quotaType", "partnerCode", "allocationProductItem", "quantity", "amount"],
    productQuotaAllowedResellerTypes: [
      { key: "Distributor", value: "DIST" },
      { key: "GPCF", value: "GPCF" },
    ],
    stockAllocationSeTypeValue: "SE",
    stockAllocationSuggestedProductSkus: ["1000697", "3003393", "1000730", "1008972"],
    stockAllocationInputTypeOptions: [
      { key: "Range", value: "RANGE" },
      { key: "Single", value: "SERIAL" },
    ],
    stockAllocationDisableEndSerialValue: "SERIAL",
    stockAllocationSimKitHeadIds: [6, 7],
    stockAllocationSimKitSerialCharacterExempt: 2,
    stockAllocationEnablePin: true,
    stockAllocationProductTypeForPin: ["service-type", "services"],
    stockAllocationSerialListColumnSort: [
      "actions",
      "productItems",
      "startSerial",
      "endSerial",
      "suggestedQuantity",
      "seIssuedQuantity",
    ],
    stockAllocationNonSerialListColumnSort: [
      "actions",
      "productItems",
      "senderOhsQuantity",
      "suggestedOhsQuantity",
      "receiverOhsQuantity",
      "pin",
      "seIssuedQuantity",
    ],
    secondarySalesOrderRetailerTypeValue: ["RET", "GPCF"],
    secondarySalesOrderSuggestedProductSkus: ["1000697", "3003393", "1000730", "1008972"],
    secondarySalesOrderInputTypeOptions: [
      { key: "Range", value: "RANGE" },
      { key: "Single", value: "SERIAL" },
    ],
    secondarySalesOrderDisableEndSerialValue: "SERIAL",
    secondarySalesOrderSimKitHeadIds: [6, 7],
    secondarySalesOrderSimKitSerialCharacterExempt: 2,
    secondarySalesOrderEnablePin: true,
    secondarySalesOrderProductTypeForPin: ["service-type", "services", "pure-service"],
    secondarySalesOrderCurrency: "BDT",
    secondarySalesOrderSerialListColumnSort: [
      "actions",
      "productItems",
      "startSerial",
      "endSerial",
      "suggestedQuantity",
      "quantity",
      "applicablePrice",
      "totalPrice",
    ],
    secondarySalesOrderNonSerialListColumnSort: [
      "actions",
      "productItems",
      "suggestedQuantity",
      "pin",
      "quantity",
      "unitPrice",
      "totalPrice",
    ]
  },
  notification:{
    classifierTag:"CAMPAIGN_CLASSIFIER",
    recipientTag:"Receiver",
    transactionCategory:"CAMPAIGN",
    isUnified:true,
  },
  product: {
    taxesDropdownLimit:30,
    productSKUValidation: {
      validation: false,
      regex: /^[A-Z0-9]{4}(?:-?[A-Z0-9]{4}){3}$/,
      format: "XXXX-XXXX-XXXX-XXXX",
    },
    variantDefaults: [],
    policyTypes: ["Operation", "State", "State Transition", "Workflow"],
    productTaxesNumericOperators: ["percentValue", "fixedValue","id"],
    productVariantNumericOperators: ["price","variantId"],
    showUnits: true,
    singleSelectProductSKUDropdown: false,
    disableProductFormFieldsOnEdit: ["code"],
    disableVariantsFormFieldsOnEdit: ["upsellOptions", "productSKU", "unitPrice.currency", "unitPrice.variablePrice"],
    productTypes: ["serialised", "non-serialised", "services", "trackable-non-serialised", "services-b2b", "services-topup", "services-custom", "hybrid", "pure-service"],
    isUpsellOptions: false,
    splitSign: "|",
    hideProductListColumn: ["id"],
    hideCreateProductFields: ["taxIds", "code"],
    showCreateProductFields: ["productGroupType"],
    productGroupTypes: ["Physical"],
    ignoreDataKeysForProductsScreen: ["SEAMLESS_PRODUCT_TEMPLATE_ID", "PRODUCT_GROUP_TYPE"],
    hideCreateVariantFields: ["weight", "volume", "warrantyPeriod", "productSKU", "supplierReference", "termsAndConditions", "EANCode"],
    hideFieldsinCreateProductCategory:["taxIds"],
    hideFieldsinEditProductCategory:["taxIds"],
    hideFieldsinViewProductCategory:["taxIds"],
    productCategoryStatusOptions: [
        { key: "Active", value: "available" },
        { key: "Inactive", value: "decommissioned" },
    ],
    showCreateVariantFields: ["bundleSelection" , "unitOfMeasure.lotControlled"],
    defaultInitValuesForVariantForm: {},
    overrideLabel: {"unitOfMeasure.unit" : "uomCode", "unitOfMeasure.quantity" : "controlMultiplier", "unitPrice.price": "mrp", "availableFrom": "priceStart",  "availableUntil": "priceEnd"},
    fetchCategoriesCriteria: { "level": "2",
        "ancestorCategoryIds" : ["2"],
        "categoryName": ""},
    productFormRequiredFields: ["categoryId"],
    productFormOptionalFields: ["availableFrom", "availableUntil"],
    productVariantFormRequiredFields: ["unitOfMeasure.unit","productVariantName"],
    productVariantFormOptionalFields: [],
    showStatusDescriptionForStatus: true,
    productsColumnSort: ["actions", "id", "code", "name", "productType"],
    posTypeRulesColumnSort: ["actions", "ruleName", "posCategory", "posValue", "variantIdAndSKUMap"],
    productCategoriesColumnSort: ["actions", "name", "description", "statusDescription"],
    productVariantsColumnSort: ["actions", "variantId", "statusDescription", "price", "currency"],
    productScreenOverrideLabel: {"availableFrom": "startFrom",  "availableUntil": "endOn"},
    hideViewVariantFields: ["eanCode", "termsAndConditions", "supplierReference", "weight", "volume", "warranty"],
    productTaxesColumnSort: ["actions", "id", "taxType", "percentValue", "fixedValue"],
    lockRulesColumnSort: ["actions", "id", "partnerType","territory","thana","productCode"],
    producLockRuleAllowedResellerTypes: [
      { key: "Retailer", value: "RTR" },
      { key: "GPCF", value: "GPCF" },
    ],
    productLockRuleDropdownLimit: 200

  },
  region:{
    hideRegionSpecificCreateFields: ["data", "location", "distributor", "ovaAccount", "cluster"],
    useV2IfApplicable: true,
    showRegionCategory: true,
    regionCategoriesAPIPageSize: 2,
    regionIdRegex: "^[A-Z0-9]{3}$",
    regionTypesColumnSort: ["actions", "level", "regionCategory", "regionTypeName"],
    regionsColumnSort: ["actions", "id", "regionName", "regionCategory", "regionType", "parentRegionName", "path"],
    thanaMappingsColumnSort: ["actions", "slaveRegion", "masterRegion"],
    paginatedDropdownsPerPage: 10,
  },
  report: {
    ReportPerPageItems: 150,
    reportDownloadOptions: {
      csv: true,
      pdf: false,
      xls: false,
    },
    reportExportOptions: {
      csv: true,
      pdf: true,
      xls: true,
    },
    defaultRecordsPerPage: '100',
    recordsPerPage: [
     { key: "100", value: "100" },
     { key: "200", value: "200" },
     { key: "500", value: "500" },
     { key: "1000", value: "1000" },
     { key: "2000", value: "2000" },
     { key: "5000", value: "5000" }
    ],
    tableRowsPerPage: [100, 200, 500, 1000],
    defaultTableRowsPerPage: 100,
    exportPdfFileDimension: [24, 50], // width, height in inches for report pdf download
    resellerTypesForDefaultDomain: ["DIST", "EADIST", "ECDIST", "ESDIST", "SDIST", "EUDIST"], // By default select domain name for this reseller types
    scheduleOptions: ["MINUTES", "HOURLY", "DAILY", "WEEKLY", "MONTHLY",],
    resellerTypeBasedTableauReports: [1]
  },
  resellerAdditionalConfig: {
    statusOptions: [
      { key: "All", value: "" },
      { key: "Active", value: "0" },
      { key: "Inactive", value: "2" },
    ],
    hideActionsForResellerTypes: ["BCU"],
    usersColumnSort: ["actions", "userId", "roleId", "resellerId", "phone", "email", "status"],
    hideOptionsFromRUserListTable: ["export"] ,
    resellerTypesColumnSort: ["actions", "id", "name"],
    resellerColumnSort:["actions", "resellerId", "resellerName", "resellerTypeName", "parentResellerName", "resellerMSISDN", "status"],
    resellerRolesColumnSort: ["actions", "roleName", "passwordPolicyKey", "importId", "lastModified"],
    passwordPoliciesColumnSort: ["actions", "name", "encryptionFormat", "description"],
    templateDropdownsColumnSort: ["actions", "fieldName", "fieldValue", "associatedFieldName", "associatedFieldValue"],
    extensiveResellerDropdown: false,
    hideActionsWhenDeactivated: true,
    resellerSearchDomainBasedDropdowns: false,
    isDocumentRequired: false,
    onlyAllowedTypesForSearch: true,
    hideDataForResellerDetail: [],
    isExternalCodeSearch: false,
    callIsBasicResellerInfoAPI: false,
    BasicResellerInfoAPILimit: 50,
    dropdownLimit: 50,
    dropdownOffset: 50,
    notificationMode:"SMS",
    payLimitPopupinputRequired :false,
    resetAdditionalFilters: true,
    resellerOrgChartAPILimit: 10,
    orgChartExportOptions: ["png", "pdf"],
    limitForParentResellerDropdown: false,
    getListingByFilterParentResellerApi: true,
    getResellerChildrenByFilterDropdownApi: false,
    dormancyEditRequired: false,
    maxDormancyPeriod: 90,
    defaultDormancyPeriod: 90,
    disablePasswordWhenNull: false,
    ersMfsColumnSort:["actions","msisdn","balance"],
    resellerRoleDefaultValues: {
      terminalUser: false,
    },
    removeAutosetRoleImportId: true,
    hideRoleFormFields: ["addressLock", "userIdRegexp", "webUser", "terminalUser"],
  },
  route: {
    resellerTypesForPartnersList: ["DIST"],
    partnerListDropdownLimit: 50,
    routeFormMinMembers: 1,
    routeFormMaxMembers: 10,
    routeFormGroupTypeKey: "GROUP_TYPE",
    routeFormGroupTypeValue: "ROUTE",
    routeFormAdminSeTypeKey: "ADMIN_TYPE",
    routeFormAdminSeTypeValue: "SE",
    routeFormAdminPartnerTypeKey: "ADMIN_TYPE",
    routeFormAdminPartnerTypeValue: "PARTNER",
    routeFormMemberResellerTypes: ["RET", "GPCF"],
    routeFormMemberTypeValue: "POS",
    routeFormUserIdType: "RESELLERID",
    routeListColumnSort: [
      "actions",
      "code",
      "name",
      "partnername",
      "status",
      "sename",
      "daysToVisit",
    ],
    routeSEMembersListColumnSort: [
     	"actions",
        "resellerId",
        "resellerName",
        "status"
    ],
    routePosMembersListColumnSort: [
      "actions",
      "userId",
      "name",
      "status",
      "priority"
    ],
  },
  settings: {
    roleForPolicyMapping: true,
    gatewayIpRegex: "^[0-9,.]*$",
    passwordMaxLength: "10",
    hideDateInPolicy: false,
    hideClonePolicy: false,
    enableModuleEndpoint: true,
	renderPolicyV2: true,
    contentTypeOptions: [
      { key: "application/json", value: "application/json" },
      { key: "multipart/form-data", value: "multipart/form-data" },
      { key: "text/html", value: "text/html" },
    ],
    channelOptions:  [
      { key: "PORTAL", value: "PORTAL" },
      { key: "APP", value: "APP" },
    ],
    swaggerComponents: [
      // sendComponentName = Send Component Name in swagger url
      // customIP = external ip (With protocol), if it is kept as blank then server ip will be picked up automatically
      { componentName: "access", port: "8374", customIP: "", sendComponentName: true },
      { componentName: "idms", port: "8219", customIP: "", sendComponentName: false },
      { componentName: "pms", port: "8012", customIP: "", sendComponentName: true },
      { componentName: "acms", port: "38082", customIP: "", sendComponentName: true },
      { componentName: "ams", port: "8092", customIP: "", sendComponentName: false },
      { componentName: "txe", port: "8088", customIP: "", sendComponentName: false },
      { componentName: "dms", port: "8033", customIP: "", sendComponentName: false },
      { componentName: "aas", port: "11001", customIP: "", sendComponentName: true },
      { componentName: "bss", port: "8085", customIP: "", sendComponentName: true },
      { componentName: "groupmanagementsystem", port: "8084", customIP: "", sendComponentName: true },
      { componentName: "ims", port: "10103", customIP: "", sendComponentName: true },
      { componentName: "kyc", port: "8297", customIP: "", sendComponentName: true },
      { componentName: "osm", port: "3000", customIP: "", sendComponentName: true },
      { componentName: "oms", port: "9595", customIP: "", sendComponentName: true },
      { componentName: "region", port: "8000", customIP: "", sendComponentName: false },
      { componentName: "surveymanagement", port: "9596", customIP: "", sendComponentName: true },
      { componentName: "tms", port: "12001", customIP: "", sendComponentName: true },
    ],
    displayChannelInViewScreen: true,
  },
  transaction: {
    powerloadMenu: ["EasyCard", "BroadbandInternetSim", "DataBundles", "VoiceOffers", "illaqaai_offer"],
    dynamicUpsell: {
      username: "BIPOWER",
      password: "BIPOWER345",
      pricePlan: "NewBasic",
      powerloadVersion: "3",
      channel: "PL_Fusion",
      commissionAmount: "0",
      commissionPercentage: "0",
      offerOnNetMins: "0",
      offerOffNetMins: "0",
      offerSms: "0",
      dataMbs: "0",
      balanceValidity: "1",
      offerDays: "1",
      responseCd: "0",
      retailerLocation: "",
      currBalance: "1",
      offerValidity: "1",
      subcSubAcctInfo: "0",
      offerMbs: "0",
      reserve1: "",
      reserve2: "",
      reserve3: ""
    },
    dynamicUpsellProductSku: "dynamic_upsell",
    anonymousIdLength: {
      min: 10,
      max: 20,
    },
    status: [
      { key: "Success", value: "success" },
      { key: "Pending", value: "pending" },
      { key: "Failed", value: "failed" },
      { key: "Denied", value: "denied" }
    ],
    transactionTypes: [
      { key: "Credit Transfer", value: "CREDIT_TRANSFER" },
      { key: "Reverse Topup", value: "REVERSE_TOPUP" },
      { key: "Reverse Credit Transfer", value: "REVERSE_CREDIT_TRANSFER" },
      { key: "Gaming Box", value: "GAMINGBOX" },
    ],
    customerCareTransactionTypes: [
      { key: 'C2S PROMORC', value: 'C2S_PROMORC' },
      { key: 'C2S XRC', value: 'C2S_XRC' },
      { key: 'C2S RC', value: 'C2S_RC' },
      { key: 'C2S PROMOPPB', value: 'C2S_PROMOPPB' },
      { key: 'C2S PPB', value: 'C2S_PPB' },
      { key: 'P2P TRANSFER', value: 'P2P' },
      { key: 'C2S PVAS', value: 'C2S_PVAS' },
    ],
    o2cSalePopupEligibleTags: ["COMMISSION"],
    o2cSaleProductSku: "O2C_transfer",
    o2cFOCValidationProductSku: "O2C_FOC_transfer",
    c2cSaleProductSku: "C2C_transfer",
    c2cFOCValidationProductSku: "C2C_FOC_transfer",
    focO2CApplicableContract: "1",
    saleO2CApplicableContract: "1",
    o2cFocProductSku: "O2C_FOC_transfer",
    o2cWithdrawalProductSku: "O2C_withdrawal",
    o2cPendingTransaction: "O2C_TRANSFER,O2C_FOC_TRANSFER",
    c2cSalePopupEligibleTags: ["COMMISSION"],
    c2cPendingTransaction: "C2C_TRANSFER",
    c2cRequestProductSku: "C2C_TRANSFER",
    c2cWithdrawalRequestProductSku: "C2C_TRANSFER",
    paymentOptions: [{ key: "CASH", value: "CASH" },],
    externalRequestType: [
      { key: "EXRCTRFREQ", value: "RC" },
      { key: "EXPROMORCTRFREQ", value: "PROMORC" },
      { key: "EXRCSTATREQ", value: "RC" },
      { key: "EXTPROMOPPBREQ", value: "PROMOPPB" },
      { key: "EXTPROMOVASTRFREQ", value: "PROMOVAS" },
      { key: "EXESBTRFREQ", value: "ESB" },
      { key: "EXPPBTRFREQ", value: "PPB" },
      { key: "EXXRCTRFREQ", value: "XRC" },
      { key: "EXTPROMOVASTRFREQ", value: "PVAS" },
    ],
    accountTypeIdMapping: [
      { key: "RC", value: "AIRTIME" },
      { key: "PROMORC", value: "AIRTIME" },
      { key: "PROMOPPB", value: "AIRTIME" },
      { key: "PROMOVAS", value: "AIRTIME" },
      { key: "ESB", value: "AIRTIME" },
      { key: 'PPB', value: "AIRTIME" },
      { key: "XRC", value: "SKITTO" },
      { key: "PVAS", value: "AIRTIME" }
    ],
    returnProductSku: "C2C_RETURN_TRANSFER",
    o2c: "OT",
    o2cWithdrawal: "OW",
    c2c: "CT",
    c2cWithdrawal: "CW",
    o2cPopUpTAXTagName:"TAX",
    o2cPopUpTAX2TagName:"TAX 2",
    o2cPopUpCOMISSIONTagName:"COMMISSION",
    o2cPopUpTDSTagName:"TDS",
    c2cPopUpTAXTagName:"TAX",
    c2cPopUpTAX2TagName:"TAX 2",
    c2cPopUpCOMISSIONTagName:"COMMISSION",
    c2cPopUpTDSTagName:"TDS",
    c2cReturn: "CR",
    c2sSale: "BD",
    c2cApplicableContract: "",
    REQUEST_GATEWAY_CODE: "WEB",
    hideTransactionInfo: [],
    hideTransactionInfoFromList: [],
    hideSearchFields: [],
    hidePendingFields:[],
    approvalTimeout: "30000", // in millis,
    instrumentType: "Cash",
    uploadFileLimit: 100,
    pendingTransactionAdminResellerTypeId: ["DT_WAREHOUSE", "OPERATOR"],
    pendingTransactionAdminRoleId: ["Reseller_admin"],
    bundleProductTypes: ["services-data-bundle"],
    bundlePaymentMethods: ["cash"],
    bundleAccountTypeId: "DATA_BUNDLE",
    showDateTimeWidget: false,
    showMobileSwitch:[],
    productPaths:{
      mobilePaths:["Mobile Bundles/"],
      fixedPaths:["Fixed Bundles/"],
    },
    formattedTimeZone: "UTC", // Value should be timezone name or UTC as default
    dateDifference: 7, // The no of days difference between default from date and to date fields in the search form starting from 0
    includeTotalCount: false, // If yes, total count is sent in the fetch api of transaction report
    searchTransactionValidation: {
      validation: false,
      fields: [],
    },
    showAnonymousIdInTopup: true
  },
  contract: {
    hideImportId : true,
    showItemName : true,
    pricingTypeOptions: ["primary","secondary"],
    showPricingTypeDropdown: true,
    hideOptionsFromContractTable : ["filter"],
    isRegionCreateContract: true,
    isAccountTypeFixedAsDropdown: true,
    productListColumnSort: ["actions","globalSku"],
    productRuleViewColumnSort: ["actions","validFrom","range"],
      contractListColumnSort: ["actions",
    "name",
    "description",
    "resellerTypeName",
    "contractStatus"],
    regionLevelCategoryIdParameters:[true,"5","2"],
    autoGenImportIdAndName: true,
    disableContractFields: ["name","importId","contractType","country","usedForResellerType","commissionMode"],
    searchOperatorMap: {
      defaultValue: "=",
      importId: "_LIKE=", // Add comma seperated new fields as per the requirement
    },
  },
  voucher:{
     commentBoxValidation: {
      limit: 256,
      regex: "^(?=.{1,256}$)[a-zA-Z0-9_@,. ]+$",
    },
    voucherState: "ACTIVE",
    showHRN: true,
    stateList: [
      "RESERVED",
      "PRINT",
      "ACTIVE",
      "BLOCKED",
      "EXPIRED",
      "REDEEM_PENDING",
      "REDEEMED",
      "CANCELLED"
    ],
    recordsPerPage: 10,
    printerProfile: {
      batchNo: true,
      orderId: false,
      batchRange: true
    },
    extendExpiryDateAction: [1,2,3,5],
    stateChangeAction: [1,2,3,4,10,11],
    parentCategoryId: 2,
  },
  wallet: {
    currencySymbol: " ",
  },
  trip: {
    hideKeysInViewPage:["motte_de_passe","motte_de_passe_flag"],
    deliveryType: {
      internal: "INTERNAL",
      external: "EXTERNAL",
    },
  },
  kyc: {
    searchKycColumnsSort:["actions", "customerId", "msisdn", "createrId", "kycStatus", "resellerTypeName", "roleName", "dateCreated"],
    isResellerTypesChildren: false,
    sendOperationIdParams: true,
    preFilledParentIdDataFields: ["extraFields.dealerCode", "extraFields.distributorCode", "extraFields.subDistributorCode"],
    enablePartnerRegister: true,
    enablePartnerUserApproval: true,
  },
  store: {
    vaultRegisterAgentDropdownPaylod: [
      {
        roleTypeId: "gpch,dch", // case sensitive
        userId: "GPCH001",
        resellerTypeId: "GPC",
        roleId: "GPT,GPJT"
      },
      {
        roleTypeId: "sep", // case sensitive
        userId: "SEP001",
        resellerTypeId: "GPCF",
        roleId: "GFU"
      }
    ]
  }
};

console.log("loaded config \n", window.config);
