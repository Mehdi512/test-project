######## Spring Application configurations ############
spring.application.name=oms
server.port=9595
server.servlet.context-path=/${spring.application.name}

logging.config=file:/opt/seamless/conf/order-management-system/log4j2.xml

############ Spring Doc (OpenAPI 3) configurations #############
springdoc.swagger-ui.disable-swagger-default-url=true

springdoc.swagger-ui.urlsPrimaryName=OMS-v2

############ Multipart File Properties ###############
spring.servlet.multipart.enabled=true
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=15MB

############# MariaDB  configurations #################
spring.datasource.url=jdbc:mariadb://{{ .Values.DB_HOST__order_management_system }}:{{ .Values.DB_PORT__order_management_system }}/order_management_system
spring.datasource.username=refill
spring.datasource.password={{ .Values.DB_HOST__password }}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate

spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=30
spring.datasource.max-active=500
spring.datasource.max-idle=15
spring.datasource.min-idle=15
spring.datasource.dbcp2.test-while-idle=true

spring.jpa.config.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.config.hibernate.format_sql=true
spring.jpa.config.hibernate.ejb.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.config.hibernate.show_sql=true
spring.jpa.config.hibernate.hbm2ddl.auto=validate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false

spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=120000
spring.datasource.hikari.connectionTimeout=300000
spring.datasource.hikari.leakDetectionThreshold=300000

############# DB Migration ####################
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=false
spring.flyway.locations=filesystem:/opt/seamless/etc/dist/ordermanagementsystem/database/order_management_system/upgrades
spring.flyway.sql-migration-prefix=1.0_

############# Integration/Proxy ####################
rest.template.http.max.idle=50
rest.template.http.keep.alive=30
rest.template.http.connection.timeout=20
rest.template.http.read.timeout=20

################### Client wise rest template configuration ###################
account.management.rest.template.http.max.idle.second=50
account.management.rest.template.http.keep.alive.second=30
account.management.rest.template.http.connection.timeout.second=20
account.management.rest.template.http.read.timeout.second=20

alert.app.rest.template.http.max.idle.second=50
alert.app.rest.template.http.keep.alive.second=30
alert.app.rest.template.http.connection.timeout.second=20
alert.app.rest.template.http.read.timeout.second=20

contract.management.rest.template.http.max.idle.second=50
contract.management.rest.template.http.keep.alive.second=30
contract.management.rest.template.http.connection.timeout.second=20
contract.management.rest.template.http.read.timeout.second=20

reseller.management.rest.template.http.max.idle.second=50
reseller.management.rest.template.http.keep.alive.second=30
reseller.management.rest.template.http.connection.timeout.second=20
reseller.management.rest.template.http.read.timeout.second=20

erp.link.rest.template.http.max.idle.second=50
erp.link.rest.template.http.keep.alive.second=30
erp.link.rest.template.http.connection.timeout.second=20
erp.link.rest.template.http.read.timeout.second=20

inventory.management.rest.template.http.max.idle.second=50
inventory.management.rest.template.http.keep.alive.second=30
inventory.management.rest.template.http.connection.timeout.second=20
inventory.management.rest.template.http.read.timeout.second=20

notification.management.rest.template.http.max.idle.second=50
notification.management.rest.template.http.keep.alive.second=30
notification.management.rest.template.http.connection.timeout.second=20
notification.management.rest.template.http.read.timeout.second=20

product.management.rest.template.http.max.idle.second=50
product.management.rest.template.http.keep.alive.second=30
product.management.rest.template.http.connection.timeout.second=20
product.management.rest.template.http.read.timeout.second=20

pretups.link.rest.template.http.max.idle.second=50
pretups.link.rest.template.http.keep.alive.second=30
pretups.link.rest.template.http.connection.timeout.second=20
pretups.link.rest.template.http.read.timeout.second=20

ers.reference.generator.rest.template.http.max.idle.second=50
ers.reference.generator.rest.template.http.keep.alive.second=30
ers.reference.generator.rest.template.http.connection.timeout.second=20
ers.reference.generator.rest.template.http.read.timeout.second=20

trip.management.rest.template.http.max.idle.second=50
trip.management.rest.template.http.keep.alive.second=30
trip.management.rest.template.http.connection.timeout.second=20
trip.management.rest.template.http.read.timeout.second=20

inventory.management.proxy.uri=http://svc-inventory-management:10103
inventory.management.proxy.name=ims-service

party.resolve.reseller.idtype.searchtype.mapping={"RESELLERID":"RESELLER_ID", "RESELLERMSISDN":"RESELLER_MSISDN", "TERMINALID":"ADDITIONAL_FIELD", "DEALERCODE":"ADDITIONAL_FIELD"}
party.resolve.idtype.proxy.maping={"RESELLERID":"dmsPartyProxy", "RESELLERMSISDN":"dmsPartyProxy", "TERMINALID":"dmsPartyProxy", "DEALERCODE":"dmsPartyProxy", "SUBSCRIBERID":"subscriberPartyProxy", "SUBSCRIBERMSISDN":"subscriberPartyProxy"}

reseller.management.proxy.uri=http://svc-dealer-management:8033
reseller.management.proxy.name=dmsPartyProxy

alert.app.proxy.uri=http://svc-alertapp:8375
alert.app.proxy.name=alertAppProxy

subscriber.management.proxy.uri=NA
subscriber.management.proxy.name=subscriberPartyProxy
subscriber.management.default.type.id=SUBSCRIBER
subscriber.management.default.account.id=OPERATOR

account.management.proxy.uri=http://svc-account-management:8092
account.management.proxy.name=ers-account

product.management.proxy.uri=http://svc-product-management:8012
product.management.proxy.name=pms-service

contract.management.proxy.uri=http://svc-contract-management:38082
contract.management.proxy.name=cms-service

trip.management.proxy.uri=http://localhost:12001
trip.management.proxy.name=tms-service

erp.link.proxy.uri=http://svc-helper-link:19287
erp.link.proxy.name=helperLinkProxy

ers.reference.generator.proxy.uri=http://svc-reference-generator:9997
ers.reference.generator.proxy.name=ers-reference-generator

region.management.proxy.uri=http://svc-region-management:8000
region.management.rest.template.http.max.idle.second=50
region.management.rest.template.http.keep.alive.second=30
region.management.rest.template.http.connection.timeout.second=20
region.management.rest.template.http.read.timeout.second=20

#####  TXE Proxy #####
ers.connections.transaction_processing.url=http://localhost:8777/txe/transactionProcessing
ers.connections.transaction_processing.user=extclientproxy
ers.connections.transaction_processing.password=extclientproxy

#####  Pretups Proxy #####
pretups.link.proxy.uri=http://localhost:8090
pretups.link.proxy.name=pretups

notification.management.proxy.uri=http://svc-notification-manager:8277
notification.management.proxy.name=notification-service
notification.management.proxy.failed.resultcode=9999
notification.management.default.sender.mail=donotreply.sfo@gmail.com
notification.management.INSTANT_SALES_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation", "sucessReverseRequest" : "SucessReverseRequest", "confirmationReverseRequest" : "ConfirmationReverseRequest", "postOrderReverseReject" : "PostOrderReverseReject", "postOrderReverseConfirmation" : "PostOrderReverseConfirmation"}
notification.management.INSTANT_SALES_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.INSTANT_SALES_ORDER_DST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest", "sucessReverseRequest" : "SucessReverseRequest", "confirmationReverseRequest" : "ConfirmationReverseRequest", "postOrderReverseReject" : "PostOrderReverseReject", "postOrderReverseConfirmation" : "PostOrderReverseConfirmation"}
notification.management.ISRO_ST.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete"}
notification.management.INSTANT_PURCHASE_RETURN_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete"}
notification.management.INSTANT_PURCHASE_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest", "postERPInventoryUpload" : "PostERPInventoryUpload"}
notification.management.INSTANT_PURCHASE_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "IPOPaymentConfirmationRequest", "postOrderConfirmation" : "IPOPostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation", "postERPInventoryUpload" : "PostERPInventoryUpload", "postCancelOrder":"IPOCancelOrder"}
notification.management.PURCHASE_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.PUSH_INVENTORY_SALES_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.SALES_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.SALES_ORDER_ST.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.INSTANT_PURCHASE_ORDER_DIGITAL.templates={"orderCreated" : "CreateOrder"}
notification.management.INSTANT_SALES_ORDER_DIGITAL.templates={"orderCreated" : "CreateOrder", "confirmationRequest" : "ConfirmationRequest", "paymentConfirmation" : "PaymentConfirmationRequest","postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation", "sucessReverseRequest" : "SucessReverseRequest", "confirmationReverseRequest" : "ConfirmationReverseRequest", "postOrderReverseReject" : "PostOrderReverseReject", "postOrderReverseConfirmation" : "PostOrderReverseConfirmation"}
notification.management.custom.RAISE_ORDER.templates={"ISO":"CreateOrder"}
notification.management.RETURN_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.INSTANT_RETURN_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.MOVE_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.PRIMARY_RETURN_ORDER.templates={"confirmationRequest" : "PrimaryReturnConfirmationRequest", "returnComplete" : "PrimaryReturnComplete", "postOrderApproveRequest" : "PrimaryReturnPostApproveOrderRequest", "postOrderRejectRequest" : "PrimaryReturnPostRejectOrderRequest"}
notification.management.ORDER_PAYMENT.templates={"IPO":"IPOPaymentSubmission"}
notification.management.custom.mail.recipient.key=SUBSCRIBEREMAIL
notification.management.custom.mail.allow=false

notification.management.enable_channel_templates=true

notification.management.template_content_types={"IPOPaymentConfirmationRequest":"text/html","IPOCancelOrder":"text/html","IPOPaymentSubmission":"text/html","IPOPostConfirmationRequest":"text/html"}
notification.management.template_mail_subjects={"IPOPaymentConfirmationRequest":"Create PO Notification","IPOCancelOrder":"Cancel PO Notification","IPOPaymentSubmission":"PO Payment Notification","IPOPostConfirmationRequest":"Reject PO Notification"}

############# Service API URL ################
cms.calculate.price.url=/acms/v2/calculate-pricing

############# CORS config ####################
cors.enable=false
#comma separated origin list or star(*) to allow all
cors.allowedorigins=*
http.response.headers=system-token,authorization

############# Thymeleaf configuration ####################
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=file:/opt/seamless/conf/order-management-system/templates/notification/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.templateResolverOrder=0

#################### Download invoice template configs ##################################
invoice.template.location-prefix=file:/opt/seamless/conf/order-management-system/templates/invoice/
invoice.template.name=invoice-template.html
invoice.template.logo-name=grameenphone-logo.png
invoice.template.file-name-format=Invoice_${invoice.invoiceId}_${.now?string("dd_MM_yyyy_HH_mm_ss")}.pdf

############# workflow States configuration ####################
order.type.default.created.state=CREATED
order.type.default.transferred.state=TRANSFERRED
order.type.default.wait.confirmation.state=TRANSFER_WAIT_CONFIRM
order.type.default.payment.confirmation.state=PAYMENT_WAIT_CONFIRM
order.type.default.returned.state=RETURN_TRANSFERRED
order.type.default.return.inventory.reserved.state=Reserved
order.type.default.return.wait.confirmation.state=RETURN_TRANSFER_WAIT_CONFIRM
order.type.default.rejected.state=TRANSFER_REJECTED
order.type.default.payment.failed.state=PAYMENT_FAILED
order.type.default.return.reject.state=RETURN_TRANSFER_REJECTED
order.type.default.external.create.wait.state=EXTERNAL_WAIT_CREATED
order.type.default.external.scheduled.state=EXTERNAL_SCHEDULED
order.type.default.external.create.state=EXTERNAL_CREATED
order.type.default.external.return.state=EXTERNAL_RETURN_TRANSFERRED
order.type.default.external.process.failed.state=EXTERNAL_PROCESS_FAILED
order.type.default.external.return.wait.confirmation.state=EXTERNAL_RETURN_TRANSFER_WAIT_CONFIRM
order.type.default.external.return.reject.state=EXTERNAL_RETURN_TRANSFER_REJECTED
order.type.default.external.create.error.state=EXTERNAL_CREATED_WITH_ERROR
order.type.default.submitted.state=SUBMITTED
order.type.default.pending.approval.state=PENDING_APPROVAL
order.type.default.approval.rejected.state=REJECTED
order.type.default.reserved.state=RESERVED
order.type.default.wait.reserved.state=RESERVED_WAIT_CONFIRM
order.type.default.reserve.rejected.state=RESERVE_REJECTED
order.type.default.reversed.state=REVERSED
order.inventory.default.reserve.state=Reserved
order.type.default.payment.initiated.state=PAYMENT_INITIATED
order.type.default.reverse.initial.state=REVERSE_INITIATED
order.type.default.reverse.final.state=REVERSED
order.type.default.reverse.fail.state=REVERSE_FAILED
order.type.default.reverse.wait.state=REVERSE_WAIT_CONFIRM
order.type.return_order.confirmation.state=RETURN_SUBMITTED
order.type.default.waiting.reservation.state=WAITING_RESERVATION
order.type.default.return.incomplete.state=RETURN_INCOMPLETE
order.type.default.failed.state=FAILED
order.type.ipo.confirmed.state=AWAITING_SHIPPING
order.type.ipo.wait.confirmation.state=Initiated
invoice.settle.eligible.order.states=TRANSFERRED,EXTERNAL_CREATED
order.type.move.order.transferred.state=Initiation Complete
order.type.default.partial.transferred.state=PARTIALLY_TRANSFERRED
order.type.move.order.failed.state=Order Rejected

order.type.wait.confirmation.state.map={"ISO_ST" : "TRANSFER_WAIT_CONFIRM" , "IPRO_ST" : "RETURN_TRANSFER_WAIT_CONFIRM", "ISO" : "TRANSFER_WAIT_CONFIRM", "IPO" : "Initiated", "IPO_ST" : "TRANSFER_WAIT_CONFIRM", "ISRO_ST" : "RETURN_TRANSFER_WAIT_CONFIRM", "PO" : "PENDING_APPROVAL", "PISO" : "RESERVED_WAIT_CONFIRM", "SO_ST" : "PENDING_APPROVAL", "SO" : "PENDING_APPROVAL", "ISO_DST" : "TRANSFER_WAIT_CONFIRM", "ISO_D" : "TRANSFER_WAIT_CONFIRM", "RO" : "PENDING_APPROVAL", "IRO" : "RETURN_TRANSFER_WAIT_CONFIRM"}
order.type.payment.confirmation.state.map={"ISO" : "PAYMENT_WAIT_CONFIRM", "IPO" : "Initiated", "PO" : "PAYMENT_WAIT_CONFIRM", "SO" : "PAYMENT_WAIT_CONFIRM", "ISO_D" : "PAYMENT_WAIT_CONFIRM"}

############# ERSWSTransactionProcessingService Connection Properties ####################
transaction_processing.pending_timeout=5000
transaction_processing.prepare_only=false
transaction_processing.initiator.principal.msisdn=254714010000
transaction_processing.context.channel=ORDER-MANAGEMENT-CLIENT
transaction_processing.context.clientId=OMS-APP
transaction_processing.account.accountTypeId=RESELLER
transaction_processing.transaction.properties.paymentMode=paymentMode
transaction_processing.transaction.properties.paymentAgreement=paymentAgreement
transaction_processing.transaction.properties.clientReference=clientReference
transaction_processing.transaction.properties.orderId=orderId

## TopUp Subscriber Input Key in request:
transaction_processing.topup.subscriber.msisdn.key=SUBSCRIBERMSISDN
transaction_processing.topup.account.specifier.type.key=accountTypeId
transaction_processing.topup.account.specifier.type.value=AIRTIME

## Product Data amount/offerPrice input key in request
product.service.amount.key=amount
product.offer.price.key=offerPrice

######### Currency ##########
locale.default.currency=BDT


############ Sort & Filter Configurations ###############
### Default Config ###
oms.data.fetch.default.perPage=30
oms.data.fetch.default.page=1
oms.data.desc.sort.default=createdStamp

order.fetch.filter.map={'orderId' : 'orderId', 'sellerId' :'seller','sellerMSISDN' :'sellerMSISDN', 'senderId' :'sender','senderMSISDN' :'senderMSISDN', 'receiverId' :'receiver','receiverMSISDN' :'receiverMSISDN', 'initiatorId' :'initiator', 'buyerId' :'buyer','buyerMSISDN' :'buyerMSISDN', 'createTimestamp' :'createdStamp', 'state' :'state','stateName':'stateName', 'orderType' :'orderType', 'paymentAgreement' :'paymentAgreement', 'servedMSISDN':'servedMSISDN', 'auth_code':'authCode', 'fetchReturnableOrders':'fetchReturnableOrders', 'invoiceStatus':'invoiceStatus'}
order.fetch.sort.map={'orderId' : 'orderId', 'sellerId' :'seller', 'senderId' :'sender', 'receiverId' :'receiver', 'initiatorId' :'initiator', 'buyerId' :'buyer', 'createTimestamp' :'createdStamp', 'stateName' :'state', 'orderType' :'orderType', 'paymentAgreement' :'paymentAgreement'}

payment.fetch.filter.map={'buyer':'payer','seller':'payee','paymentId' : 'paymentId','orderId' : 'orderId','paymentMode' : 'paymentMode','paymentAmount' : 'totalAmount','availableAmount' : 'availableAmount','paymentLink' : 'paymentLink','status' : 'status','transactionTime' : 'createdStamp'}
payment.fetch.sort.map={'buyer':'payer','seller':'payee','paymentId' : 'paymentId','orderId' : 'orderId','paymentMode' : 'paymentMode','paymentAmount' : 'totalAmount','availableAmount' : 'availableAmount','paymentLink' : 'paymentLink','status' : 'status','transactionTime' : 'createdStamp'}

invoice.fetch.filter.map={'invoiceId' : 'invoiceId', 'orderId' : 'orderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'totalTax' : 'totalTax', 'totalSellerCommission' : 'totalSellerCommission', 'totalBuyerCommission' : 'totalBuyerCommission', 'totalDiscount' : 'totalDiscount', 'createTimestamp' : 'createdStamp', 'customerMsisdn' : 'customerMsisdn'}
invoice.fetch.sort.map={'invoiceId' : 'invoiceId', 'orderId' : 'orderEntity.orderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'createTimestamp' : 'createdStamp'}

credit_note.fetch.filter.map={'creditNoteId' : 'creditNoteId', 'originalOrderId' : 'originalOrderId', 'returnOrderId' : 'returnOrderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'status' : 'status', 'totalPrice' : 'totalAmount', 'totalTax' : 'totalTax', 'totalSellerCommission' : 'totalSellerCommission', 'totalBuyerCommission' : 'totalBuyerCommission', 'totalPenalty' : 'totalPenalty',   'createTimestamp' : 'createdStamp'}
credit_note.fetch.sort.map={'creditNoteId' : 'creditNoteId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'status' : 'status', 'totalPrice' : 'totalAmount', 'createTimestamp' : 'createdStamp'}

order_product_quota_rule.fetch.filter.map={'ruleId' : 'ruleId', 'resellerId' : 'resellerId', 'productSKU' : 'productSKU', 'quotaFor' : 'quotaFor', 'multipleOf' : 'multipleOf',  'hourlyLimit' : 'hourlyLimit', 'dailyLimit' : 'dailyLimit', 'weeklyLimit' : 'weeklyLimit', 'monthlyLimit' : 'monthlyLimit', 'createTimestamp' : 'createdStamp'}
order_product_quota_rule.fetch.sort.map={'ruleId' : 'ruleId', 'resellerId' : 'resellerId', 'productSKU' : 'productSKU', 'quotaFor' : 'quotaFor', 'multipleOf' : 'multipleOf', 'hourlyLimit' : 'hourlyLimit', 'dailyLimit' : 'dailyLimit', 'weeklyLimit' : 'weeklyLimit', 'monthlyLimit' : 'monthlyLimit', 'createTimestamp' : 'createdStamp'}

order.pay.while.ordering.payment.agreements=UPFRONT
pms.inventory.count.perPage=1000
######### Order Management Transaction Retry ###########
order.transaction.retry.max.attempts=10
order.transaction.retry.max.delay=1000
order.transaction.payment.retry.max.attempts=10000

##################### Message Resource Properties ########################
locale.message.path=/opt/seamless/conf/order-management-system
locale.message.prefix=messages
################# Default system locale #################
#locale.language=en
# Header name for extracting reseller language
#locale.languageHeaderName=accept-language
# Enable/disable reseller's preferred language
#locale.userLangPreferenceEnabled=true
################# Default system locale End #################

####################### Data feed version ################################
dataFeed.version=1
dataFeed.componentName=oms

################### Configuration for executor service ###################
threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS

######################### Configure freemarker ############################
dataFeed.freemarker.file.path=/opt/seamless/conf/order-management-system/templates/tdr
template.REVERSE_ORDER=reverse_order.ftl
template.RAISE_ORDER=raise_order.ftl
template.FAILED_RAISE_ORDER=failed_raise_order.ftl
template.RECONCILE_ORDER_MISSING_STOCK=reconcile_order_missing_stock.ftl
template.RECONCILE_ORDER_MISSING_COLLECTION=reconcile_order_missing_collection.ftl
template.ORDER_PRODUCT_QUOTA_RULE=order_product_quota_rule.ftl

######################### Contract Tags Properties  ############################
contract.commission.tags=COMMISSION,SENDER_COMMISSION,RECEIVER_COMMISSION
contract.discount.tags=DISCOUNT,RECEIVER_DISCOUNT,SENDER_DISCOUNT
contract.payment.tags=SENDER,RECEIVER

contract.sender.commission.tag=SENDER_COMMISSION
contract.receiver.commission.tag=RECEIVER_COMMISSION
contract.receiver.discount.tags=RECEIVER_DISCOUNT
contract.receiver.penalty.tags=RECEIVER_PENALTY

contract.discount.disable.product.type.list=SERVICES_B2B,SERVICES_TOPUP
contract.commission.disable.product.type.list=SERVICES_B2B,SERVICES_TOPUP
service.product.type.list=SERVICES_B2B,SERVICES_TOPUP,SERVICES

contract.request.fields.paymentMode.key=paymentMode
contract.request.fields.paymentAgreement.key=paymentAgreement
contract.request.fields.productType.key=productType
################### Reseller Related Properties ######################
# Search Attribute map value can be RESELLER_ID/RESELLER_MSISDN/EXTERNAL_FIELD
# If we choose attribute as RESELLER_ID/RESELLER_MSISDN we will search user as RESELLER_ID/RESELLER_MSISDN
# If we choose attribute as EXTERNAL_FIELD, then we will search reseller with external.field in DB
# Search Attribute map, key can be configured as channel, which will accept at any request
# For Ex: 3PP is channel, every time we search reseller with external-field for this channel
# default value would be RESELLER_ID, if there is no channel defined.
dms.search.attribute.channel.map={"3PP" : "EXTERNAL_FIELD", "order-management-api" : "RESELLER_ID"}
dms.search.attribute.external.field=region

################# Kafka Streams configurations #################
spring.kafka.producer.bootstrap-servers=svc-kafka:9092
spring.kafka.consumer.properties.max.poll.interval.ms=120000
spring.kafka.security.protocol.enable=false
spring.kafka.security.protocol=SASL_SSL
spring.kafka.sasl.mechanism=SCRAM-SHA-512
spring.kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"sfcpockafka\" password=\"SDS1@sfcpockafka\";


oms-out-stream.po-out.topic.name=order-management-do-dev
oms-out-stream.partitionCount=12
oms-out-stream.replicaCount=1
oms-out-stream.po-out.produce.auto.start=false

ic-out-stream.order-confirm.topic.name=ic-order-confirmation-do-dev
ic-out-stream.order-confirm.partitionCount=12
ic-out-stream.order-confirm.groupName=ic-order-confirmation
ic-out-stream.order-confirm.listen.auto.start=false

ic-out-stream.payment-confirm.topic.name=ic-payment-confirmation-do-dev
ic-out-stream.payment-confirm.partitionCount=12
ic-out-stream.payment-confirm.groupName=ic-payment-status
ic-out-stream.payment-confirm.listen.auto.start=false

################# Schedulers ###################################
order-payment.timeout.scheduler.cron=0 * * * * *
order-payment.timeout.scheduler.enable=false

invoice.settlement.scheduler.enable=false
invoice.settlement.scheduler.cron=0 0 1 * * *

populate.external.inventory.scheduler.enable=false
populate.external.inventory.scheduler.failure.states=FAILURE
populate.external.inventory.scheduler.success.states=CLOSED
populate.external.inventory.scheduler.pending.states=PENDING
populate.external.inventory.scheduler.max.capacity=10
populate.external.inventory.scheduler.system-token={  "ersReference": "87627365768275356776",  "startTime": "1614254785232",  "rootComponent": "oms",  "context": {    "client": {      "channel": "swagger-ui",      "clientId": "OM-Swagger",      "clientReference": "OMS"    },    "initiator": {      "uid": "OPERATOR",      "typ": "RESELLERUSERID",      "rtp": "operator",      "rmsisdn": "16010000",      "resellerPath": "OPERATOR",    "rid":"OPERATOR" }  }}
populate.external.inventory.scheduler.authorization=6534
populate.external.inventory.scheduler.cron=0/20 * * * * ?
populate.external.inventory.scheduler.max.retry.count=5
populate.external.inventory.retryable.scheduler.cron=0/50 * * * * ?
populate.external.inventory.scheduler.start.serial.key=start_serial
populate.external.inventory.scheduler.end.serial.key=end_serial

################# External field configuration #################
order.applicable.operationId.mapping={"registerExternalOrder":"SFC_RAISE_ORDER","fetchDealerBalance":"SFC_FETCH_DEALER_BALANCE","getLineItemsStatus":"SFC_LINE_ITEM_STATUS", "getLineItems":"SFC_PICK_LIST", "fetchERPOrderStatus" : "SFC_FETCH_ERP_ORDER_STATUS", "registerDigitalExternalOrder":"SFC_DIGITAL_RAISE_ORDER", "fetchPretupsDealerBalance":"PRETUP_DIGITAL_DEALER_BALANCE", "pretupTransferRequest":"PRETUP_TRANSFER_REQUEST", "reconcileExternalInventory" : "VFO_RECONCILE_UPLOAD_INVENTORY", "registerExternalOrder_IPO" : "VFO_RAISE_ORDER_IPO", "registerExternalOrder_IPO_ST" : "VFO_RAISE_ORDER_IPO_ST", "registerExternalOrder_ISO" : "VFO_RAISE_ORDER_ISO", "initiateMPesaPayments_OrderManagementTransaction" : "SFC_INITIATE_MPESA_PAYMENT_OMT","initiateMPesaPayments_MakePaymentRequest" : "SFC_INITIATE_MPESA_PAYMENT_MPR", "fetchPaymentStatus_order" : "SFC_FETCH_MPESA_PAYMENT_STATUS_ORDER",  "fetchPaymentStatus_payment" : "SFC_FETCH_MPESA_PAYMENT_STATUS_PAYMENT","raiseExternalReturnOrder":"SFC_RETURN_ORDER", "raiseOrder_MFS_ISO_ST":"GP_IDM_MFS_ORDER_ISOST", "raiseOrder_ERS_ISO_ST":"GP_IDM_ERS_ORDER_ISOST","raiseOrder_MFS_ISO":"GP_IDM_MFS_ORDER_ISO", "raiseOrder_ERS_ISO":"GP_IDM_ERS_ORDER_ISO"}
################### Product SKU Resolve Related Properties ######################
# Product SKU fetched during raise order, based on serial number.
# For Ex: 3PP is channel, if the value is true then we first call ims with first serial number and resolve product sku
# if it is false, then we assume valid product sku is already provided in raise order request
# by default the value is false for undefined channel
ims.search.serial.channel.map={"3PP" : true, "order-management-api" : false}

# Uncomment following property to set following field in items data, if does not provided in the input already,
# key would the name defined here value would be the productSKU
# oms.items.data.field.name=operationType

order.request.fields.operationType.key=operationType
order.request.fields.senderIdType.key=senderIdType
order.request.fields.receiverIdType.key=receiverIdType

order.operator.system.token.for.triggered.operations={  "ersReference": "87627365768275356776",  "startTime": "1614254785232",  "rootComponent": "order-management",  "context": {    "client": {      "channel": "swagger-ui",      "clientId": "OM-Swagger",      "clientReference": "OMS"    },    "initiator": {      "uid": "OPERATOR",      "typ": "RESELLERUSERID",      "rtp": "operator",      "rmsisdn": "16010000",      "resellerPath": "OPERATOR",    "rid":"OPERATOR"    }  }}
order.operator.authorization.token.for.triggered.operations=abc
order.payment.mpesa.scheduler.pool.size=10
ic.payment.status.fetch.link.errors=1599,9002

spring.profiles.active=cron
# Quick fixes
order.payment-preset.caching-enabled=false
order.resolve-bulk-reseller-info.enabled=false
order.fetch-contract-details.once-only=false

#sfc specific
delete.order.external_inventory=true

order.evaluate-rules.classname=ApplicableProductRule

order.default.volume.unit=CUBIC_METER
order.default.weight.unit=KILOGRAM

order.hidden.additional.field.list=senderPin

# Enable/Disable account transaction creation in AMS
order.make.account.transaction.operation.enabled=false

############# Audit trail data feed ##############
auditFeed.componentName=oms
auditFeed.eventType=audit
auditFeed.version=1

audit.feed.list.type=INCLUDE
audit.feed.list.events=RAISE_ORDER,UPDATE_INVOICE
auditFeed.freemarker.file.path=/opt/seamless/conf/order-management-system/templates/audit
auditFeed.default.template=oms_audit_feed.ftl

order.hidden.additional.field.map={ "senderPin": "******", "invoiceAmount" : "", "PIN":"******"}

otp.management.proxy.uri=http://svc-otp-management:8899/otp-management



########### Id generator properties ###########
## keeping these properties blank for now, since there is no usecase for them
id.generator.proxy.name=configurableIDGenerator
id.generator.configurer.order_types.IPO=CONSTANT(PO)|REGION_CODE(extract_from_reseller=true, source=region, substr=0-3)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,char=0,length=6,max=999999,prefixed=true,prefix-source=<1>)
id.generator.configurer.order_types.ISO_ST=CONSTANT(I)|RESELLER_EXTRA_PARAMS(field=shortCode)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,length=13,char=0,max=60001)
id.generator.configurer.order_types.FALLBACK=CONSTANT(OMS-)|UUID(random=true)
id.generator.configurer.order_types.ISO=CONSTANT(SSO)|RESELLER_EXTRA_PARAMS(field=shortCode)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,length=13,char=0,max=60001)
id.generator.configurer.order_types.MO=CONSTANT(MORMS)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,char=0,length=6,max=999999,prefixed=true,prefix-source=<1>)
id.generator.configurer.order_types.DUMMY_PO=CONSTANT(PO)|RESELLER_EXTRA_PARAMS(field=shortCode)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,length=13,char=0,max=60001)
id.generator.configurer.order_types.PRIMARY_RO=CONSTANT(RO)|CURRENT_DATETIME(ddMMYY)|SEQUENCE(padding=true,length=6,char=0,max=60001)
id.generator.configurer.use_fallback=true
id.generator.configurer.invoice.use_fallback=false
# If the above fallback is enabled then it will generate invoice id in the previous format, otherwise in the below sequence
id.generator.configurer.invoice=CONSTANT(REC)|CURRENT_DATETIME(YYYYMMdd)|SEQUENCE(padding=true,char=0,length=10,max=9999999999,prefixed=true,prefix-source=INVOICE_ID)


########### Quota Management System ################
quota.management.proxy.uri=http://svc-quota-management:9816/quota-management-system/v1
quota.management.proxy.failed.result-code=9999
quota.management.rest.template.http.max.idle.seconds=50
quota.management.rest.template.http.keep.alive.seconds=30
quota.management.rest.template.http.connection.timeout.seconds=20
quota.management.rest.template.http.read.timeout.seconds=20

order.automatic.timeout.scheduler.enable=true
order.automatic.timeout.scheduler.cron=0 * * * * ?
order.automatic.cancel.if.in.states=Initiated
order.automatic.cancel.final.state=Order Canceled
#This config sets up a timeout for each orderType in miliseconds.eq (1day=86400000,5days=432000000)
order.automatic.cancel.order.timeout.map={"ISO":"300000","IPO":"432000000"}

enable.multiple.internal.orders=true
oms.invoice.approval.needed=true
#Enable the normal confirmation flow for external orders
enable.confirmation.for.external.orders=true

oms.collect.payment.external.processing=true

########### Notification properties ###########
notification.management.preferences={"ISO_ST":"SMS_EMAIL","ISO":"SMS_EMAIL","IPO":"SMS_EMAIL"}
send.notification.reseller.users=false
send.notification.reseller.users.party.type=
send.notification.reseller.users.party.type.with.role=


order.type.cash.po.cancel.from.state=PAYMENT_WAIT_CONFIRM,Initiated
order.type.credit.po.cancel.from.state=Initiated,Order Rejected
order.type.ipo.wait.cancel.final.state=Order Canceled
order.type.ipo.invoice.cancel.from.state=INITIATED,PENDING_CONFIRMATION
#order.type.ipo.order.inventory.import.final.state=COMPLETED

order.type.ipo.order.success.final.state=CLOSED
order.type.ipo.order.failed.final.state=CLOSED_FAILED
bulk.upload.default.system.token={"ersReference":"20220912124048041010000013336","startTime":1662986448,"rootComponent":"oms","context":{"client":{"channel":"web"},"initiator":{"uid":"operator","typ":"RESELLERUSERNAME","rtp":"operator","rid":"Operator","roleId":"Reseller_admin","rmsisdn":"254714000000","resellerPath":"OPERATOR"}}}

gp.order.type.ipo.update.state.enable=true
gp.order.type.ipo.initial.state=Initiated
gp.order.type.ipo.initiation.complete.state=Initiation Complete
gp.order.type.ipo.awaiting.shipping.state=AWAITING_SHIPPING
gp.order.type.ipo.rejected.state=Order Rejected
order.type.ipo.order.payment.completed.state=SETTLED
order.type.ipo_st.transferred.state=Initiation Complete

dummy.po.raise.order.for.tertiary.scheduler.enable=false
dummy.po.raise.order.for.tertiary.scheduler.cron=0 * * * * *
dummy.po.raise.order.tertiary.sales.order.seller.type=GPC
dummy.po.raise.order.for.tertiary.sales.order.in.states=TRANSFERRED
dummy.po.raise.order.for.allowed.tertiary.sales.order.type=ISO
dummy.po.raise.order.param.client_context.client_comment=Raise dummy order for
dummy.po.raise.order.param.client_context.channel=WEB
dummy.po.raise.order.param.client_context.client_id=IDM
dummy.po.raise.order.param.order_type=DUMMY_PO
dummy.po.raise.order.param.payment_mode=CASH
dummy.po.raise.order.param.payment_agreement=UPFRONT
dummy.po.raise.order.default.seller=Operator
dummy.po.raise.order.for.tertiary.default.system.token={"ersReference":"202311220759479840132167","startTime":1700639987,"rootComponent":"oms","context":{"client":{"channel":"web","language":"en"},"initiator":{"uid":"Operator","typ":"RESELLERUSERNAME","rtp":"Operator","rid":"Operator","roleId":"Webuser","rmsisdn":"27798727071","resellerPath":"Operator"}}}
dummy.po.raise.order.for.tertiary.default.authorization=chghd

primary.return.order.final.returned.state=RETURN_TRANSFERRED
primary.return.order.final.reject.state=RETURN_TRANSFER_REJECTED
primary.return.order.wait.confirmation.state=RETURN_TRANSFER_WAIT_CONFIRM
primary.return.order.allowable.orders.type.to.return=IPO
primary.return.order.allowable.orders.type.final.states=CLOSED,TRANSFERRED

######################################################################
##################### Payment related configs ########################
external.payments.validate.amount=true
external.payments.maximum.amount.difference=0.99
external.payment.pol.instrument.types=AUTO_BANK_DEBIT
external.payment.active.states=OPEN,PENDING
################ BPRS related configs ###################
bprs.declare.payments.operation.type=BPRS_DECLARE_PAYMENTS
bprs.declare.payments.throw.error.on.multiple.invoice=true
bprs.post.payment.order.state=EXTERNAL_PAYMENT_SUBMITTED
################ POL related configs ###################
pol.declare.payments.operation.type=POL_DECLARE_PAYMENTS
pol.declare.payments.description.value=DAT Payment
pol.declare.payments.channel.id.value=1CDV2uQ7NW
pol.declare.payments.channel.id.name=APIGW
pol.post.payment.order.state=EXTERNAL_PAYMENT_SUBMITTED
#########################################################

########### Order product subtypes-IPO ###########
ipo.order.physical.product.types=SERIALIZED,NONSERIALIZED,TRACKABLE_NONSERIALIZED,HYBRID
ipo.order.digital.product.types=SERVICES_TOPUP,SERVICES_B2B,SERVICES_CUSTOM,SERVICES
ipo.order.mfs.product.types=SERVICES
ipo.order.mfs.products=1008972
########################################################

helper.link.proxy.uri=http://svc-helper-link:19287
helper.link.rest.template.http.max.idle.second=50
helper.link.rest.template.http.keep.alive.second=30
helper.link.rest.template.http.connection.timeout.second=20
helper.link.rest.template.http.read.timeout.second=20
helper.link.success.status.codes=200

# Defaulter Reporting Configuration
defaulter.reporting.cron=0 0 0 * * ?
defaulter.reporting.batch.size=1000
defaulter.reporting.max.retries=3
defaulter.reporting.retry.delay.ms=5000
defaulter.reporting.system.token={"ersReference":"SYSTEM","startTime":"1614254785232","rootComponent":"order-management","context":{"client":{"channel":"SYSTEM","clientId":"SYSTEM","clientReference":"SYSTEM"},"initiator":{"uid":"SYSTEM","typ":"SYSTEM","rtp":"system","rmsisdn":"SYSTEM","resellerPath":"SYSTEM"}}}
bprs.report.defaulters.operation.type=BPRS_DEFAULTERS_NOTIFICATION

# API Endpoints
bprs.api.endpoint=http://{{ .Values.HOST__link_simulator }}:{{ .Values.PORT__link_simulator }}/restservice/api
bprs.defaulter.endpoint=/DMSDefaulter

#####  Configs for fetching data from the Quota Management System #####
# quota.management.proxy.uri=http://localhost/api/quota-management-system/v1
quota.management.rest.template.http.max.idle.second=50
quota.management.rest.template.http.keep.alive.second=30
quota.management.rest.template.http.connection.timeout.second=20
quota.management.rest.template.http.read.timeout.second=20

######### External response resolver configs ##############
## populating the failure reason only in case of failures
external.system.response.mapping.ERS.resultMessage=['actionData']['ESRStandardLinkC2CAction']['txnstatus'] != '0' ? ['actionData']['ESRStandardLinkC2CAction']['resultMessage'] : ''
external.system.response.mapping.ERS.txnStatus=['actionData']['ESRStandardLinkC2CAction']['txnstatus']
external.system.response.mapping.MFS.resultMessage=['actionData']['MFSC2CTransferAction']['txnstatus'] != '0' ? ['actionData']['MFSC2CTransferAction']['resultMessage'] : ''
external.system.response.mapping.MFS.txnStatus=['actionData']['MFSC2CTransferAction']['txnstatus']
external.system.response.mapping.ERP.resultMessage=
external.system.response.mapping.ERP.txnStatus=

order-confirmation.timeout.scheduler.enable=false
order-confirmation.timeout.scheduler.cron=0 * * * * *
order.confirmation.channel.enable=false
order.confirmation.channel=smsapp
order.confirmation.state=TRANSFER_WAIT_CONFIRM
order.confirmation.pending_state.timeout.minutes=5
order.confirmation.system.reject_reason=Order timed out
order.confirmation.allow.categories=SimIssuance